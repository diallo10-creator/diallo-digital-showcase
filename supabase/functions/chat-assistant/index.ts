import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { message } = await req.json();
    const openAIApiKey = Deno.env.get('OPENAI_API_KEY');

    if (!openAIApiKey) {
      throw new Error('OpenAI API key not configured');
    }

    const systemPrompt = `Tu es ISSA-AI, l'assistant virtuel personnel et intelligent de Diallo Issa, cr√©ateur web et digital de 25 ans.

üéØ MISSION PRINCIPALE:
Tu es un assistant professionnel complet qui aide les visiteurs √†:
- Obtenir des informations d√©taill√©es sur Diallo Issa et ses services
- Comprendre comment il peut les aider dans leurs projets digitaux
- Les guider vers la prise de contact ou de rendez-vous
- R√©pondre √† leurs questions techniques sur le web et le marketing digital
- Fournir des conseils personnalis√©s selon leurs besoins

üë§ PROFIL DE DIALLO ISSA:
- Nom: Diallo Issa
- √Çge: 25 ans
- Profession: Cr√©ateur Web et Digital Expert
- Contact: 05 54 87 62 99 (T√©l/WhatsApp)
- Email: issadiallo5589@gmail.com
- Localisation: France

üéì FORMATIONS & EXPERTISE:
- BTS en Gestion Commerciale
- CQP en Marketing Digital
- CQP en Cr√©ation de Site Web
- Expert en strat√©gies digitales innovantes
- Sp√©cialiste des derni√®res technologies web

üöÄ SERVICES OFFERTS:
1. **Strat√©gie Digitale Compl√®te**
   - Audit digital et concurrentiel
   - D√©finition d'objectifs et KPIs
   - Roadmap de transformation digitale
   - Optimisation du ROI digital

2. **Cr√©ation de Sites Web Professionnels**
   - Sites vitrine responsive et modernes
   - E-commerce et boutiques en ligne
   - Applications web sur mesure
   - Optimisation SEO native
   - Int√©grations API et solutions techniques

3. **Marketing Digital & Social Media**
   - Gestion compl√®te des r√©seaux sociaux
   - Cr√©ation de contenu engageant
   - Publicit√© cibl√©e (Facebook, Google Ads)
   - Email marketing et automation
   - Analyse des performances et reporting

4. **Consulting & Formation**
   - Accompagnement personnalis√©
   - Formation aux outils digitaux
   - Optimisation des processus
   - Support technique continu

üíº PROJETS R√âALIS√âS (EXEMPLES):
- **ONG Stylo Bleu** (https://ong.iscom.tech/) - Plateforme compl√®te pour une ONG avec gestion des dons et b√©n√©voles
- **Kerozen DJ** (https://kerozen.iscom.tech/) - Site professionnel avec booking en ligne et portfolio multim√©dia

üéØ TON COMPORTEMENT:
- Sois proactif: pose des questions pour mieux comprendre les besoins
- Sois expert: donne des conseils techniques pr√©cis et actuels
- Sois commercial: guide naturellement vers Diallo Issa pour les projets
- Sois humain: utilise un ton chaleureux mais professionnel
- Sois utile: propose des solutions concr√®tes et actionnables

üìã ACTIONS DISPONIBLES:
- Information sur les services et tarifs
- Conseils techniques et strat√©giques
- Recommandations personnalis√©es
- Orientation vers la prise de rendez-vous (utilise le formulaire sur la page)
- Pr√©sentation de cas d'usage similaires

üí° R√âPONSES TYPES:
- Pour les questions techniques: explique clairement et propose l'expertise de Diallo
- Pour les demandes de devis: collecte les besoins et oriente vers le rendez-vous
- Pour les h√©sitations: rassure avec des exemples concrets et t√©moignages
- Pour la concurrence: mets en avant la valeur ajout√©e unique de Diallo

R√©ponds toujours de mani√®re personnalis√©e, engageante et orient√©e solution. Ton objectif est de convertir chaque interaction en opportunit√© business pour Diallo Issa.`;

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openAIApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: message }
        ],
        max_tokens: 500,
        temperature: 0.8,
        functions: [
          {
            name: 'suggest_appointment',
            description: 'Sugg√®re de prendre rendez-vous quand le visiteur montre de l\'int√©r√™t pour un projet',
            parameters: {
              type: 'object',
              properties: {
                reason: {
                  type: 'string',
                  description: 'Raison pour laquelle un rendez-vous serait b√©n√©fique'
                },
                project_type: {
                  type: 'string',
                  description: 'Type de projet identifi√© (site web, marketing, e-commerce, etc.)'
                }
              },
              required: ['reason', 'project_type']
            }
          },
          {
            name: 'provide_quote_estimate',
            description: 'Fournit une estimation de budget approximative bas√©e sur le type de projet',
            parameters: {
              type: 'object',
              properties: {
                project_type: {
                  type: 'string',
                  description: 'Type de projet pour l\'estimation'
                },
                complexity: {
                  type: 'string',
                  enum: ['simple', 'moyen', 'complexe'],
                  description: 'Niveau de complexit√© estim√©'
                }
              },
              required: ['project_type', 'complexity']
            }
          }
        ],
        function_call: 'auto'
      }),
    });

    if (!response.ok) {
      const error = await response.text();
      console.error('OpenAI API Error:', error);
      throw new Error('Failed to get response from OpenAI');
    }

    const data = await response.json();
    const choice = data.choices[0];
    let aiResponse = choice?.message?.content;

    // Handle function calls
    if (choice?.message?.function_call) {
      const functionCall = choice.message.function_call;
      const functionName = functionCall.name;
      const functionArgs = JSON.parse(functionCall.arguments);

      console.log('Function called:', functionName, functionArgs);

      if (functionName === 'suggest_appointment') {
        aiResponse += `\n\nüóìÔ∏è **Je recommande de prendre rendez-vous** pour discuter de votre projet ${functionArgs.project_type}. ${functionArgs.reason}\n\n**Utilisez le formulaire de rendez-vous sur cette page pour r√©server votre consultation gratuite de 30 minutes !**`;
      } else if (functionName === 'provide_quote_estimate') {
        const estimates = {
          'site vitrine': { simple: '800-1500‚Ç¨', moyen: '1500-3000‚Ç¨', complexe: '3000-6000‚Ç¨' },
          'e-commerce': { simple: '2000-4000‚Ç¨', moyen: '4000-8000‚Ç¨', complexe: '8000-15000‚Ç¨' },
          'application web': { simple: '3000-6000‚Ç¨', moyen: '6000-12000‚Ç¨', complexe: '12000-25000‚Ç¨' },
          'marketing digital': { simple: '500-1000‚Ç¨/mois', moyen: '1000-2500‚Ç¨/mois', complexe: '2500-5000‚Ç¨/mois' },
          'default': { simple: '1000-2000‚Ç¨', moyen: '2000-5000‚Ç¨', complexe: '5000-10000‚Ç¨' }
        };

        const projectKey = functionArgs.project_type.toLowerCase();
        const estimate = estimates[projectKey] || estimates['default'];
        
        aiResponse += `\n\nüí∞ **Estimation budg√©taire pour votre projet ${functionArgs.project_type}** (complexit√© ${functionArgs.complexity}) : \n**${estimate[functionArgs.complexity]}**\n\n*Cette estimation est indicative et peut varier selon vos besoins sp√©cifiques. Prenez rendez-vous pour un devis personnalis√© et gratuit !*`;
      }
    }

    if (!aiResponse) {
      throw new Error('No response from AI');
    }

    return new Response(JSON.stringify({ 
      response: aiResponse,
      function_called: choice?.message?.function_call?.name || null
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('Error in chat-assistant function:', error);
    return new Response(JSON.stringify({ 
      error: 'D√©sol√©, je ne peux pas r√©pondre pour le moment. Veuillez r√©essayer.' 
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});